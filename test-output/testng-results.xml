<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-09-25T03:06:41Z" name="Default suite" finished-at="2021-09-25T03:06:41Z" duration-ms="434">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.daedalus.runner.TestRunner@26ceffa8]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2021-09-25T03:06:41Z" name="Default test" finished-at="2021-09-25T03:06:41Z" duration-ms="434">
      <class name="com.daedalus.runner.TestRunner">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:com.daedalus.runner.TestRunner@26ceffa8]" started-at="2021-09-24T22:06:41Z" name="setUpClass" finished-at="2021-09-24T22:06:41Z" duration-ms="249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.daedalus.runner.TestRunner@26ceffa8]" started-at="2021-09-24T22:06:41Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-09-24T22:06:41Z" duration-ms="119" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Write Hello World"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Validate "Hello World" word is printing]"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'The user is having a new project' and 2 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("The user is having a new project")
public void the_user_is_having_a_new_project() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("The user writes Hello World test")
public void the_user_writes_hello_world_test() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user should be able to runit and see {string} printed")
public void the_user_should_be_able_to_runit_and_see_printed(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'The user is having a new project' and 2 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("The user is having a new project")
public void the_user_is_having_a_new_project() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("The user writes Hello World test")
public void the_user_writes_hello_world_test() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user should be able to runit and see {string} printed")
public void the_user_should_be_able_to_runit_and_see_printed(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
	at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:135)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:117)
	at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:131)
	at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:com.daedalus.runner.TestRunner@26ceffa8]" started-at="2021-09-24T22:06:41Z" name="tearDownClass" finished-at="2021-09-24T22:06:41Z" duration-ms="54" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.daedalus.runner.TestRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
